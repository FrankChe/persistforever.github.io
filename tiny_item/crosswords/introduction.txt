一、数独生成
1.初始化9X9的最简单的数独初局。
2.以随机数的方式选择1-9中的两个数，调换整个数独初局中这两个数的位置，这样，仍然满足数独规则（每一行每一列每一宫均有1-9这9个数字）。
3.循环50次之后便可生成一个新的数独初盘。

二、去除数字
1. 产生0-2之间的随机数 i , j，在第一宫中，将坐标为（i，j）的数字的标记值记为1，第二宫中，即为（i，j+3），第三宫中即（i，j+6），依此类推。
2. 循环操作步骤一若干次，次数增加，则游戏难度上升。上图中的N表示每一宫中去除数字的个数，即为难度值。

三、判断终盘唯一解
1. 按顺序记录每个被去除的数字，用数组blank_row[] 和blank_col[]记录这个数字的行列位置。以此作为搜索的节点。
2. 用深度优先搜索算法，按节点顺序进行搜索。搜索到 i 节点时，判断这个数是否满足数独规则。
3. 依次搜索每一个节点，所有节点搜索完毕并且每个节点都满足数独规则，则将 disc 数值加1 。最终得到的 disc 的大小就是这个数独出局的解的个数。
4. 判断 disc 的大小，若为1，则可以成为正确的数独出局，若不为1，则需要重新开始。

四、交互
按照说明输入答案，按照顺序判断答案是否匹配，若不匹配则立刻跳出循环并显示“答案错误”并显示是否需要观看答案，输入Y可观看答案。若答案全部正确，则显示“答案正确”。至此程序结束

